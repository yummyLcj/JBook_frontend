<template>
  <view class="container">
    <view class="header">
      <button size="mini" plain class="{{record.type === '1' ? 'selected' : ''}}" @tap="changeType(1)">支出</button>
      <button size="mini" plain class="{{record.type === '2' ? 'selected': ''}}" @tap="changeType(2)">收入</button>
    </view>

    <form class="add-form">
      <view class="add-mount">
        <view class="add-each tal">
          <text class="iconfont icon-{{record.icon}} {{record.icon}} icon-border"></text>
          <text class="mr10">{{record.name}}</text>
        </view>
        <view class="add-each tar">
          <input class="fs42" type="digit" name="amount" placeholder="0" value="{{record.amount}}" />
        </view>
      </view>
      <view class="add-mount">
        <picker class="add-each tal" mode="date" @change="getDate" value="{{record.date}}">
          <text class="iconfont icon-date fs42"></text>
          <text class="mr10">{{record.date}}</text>
        </picker>
        <view class="add-each tar">
          <input type="text" name="remark" placeholder="备注" value="{{record.remark}}" />
        </view>
      </view>
    </form>

    <view class="tags">
      <repeat for="{{tags}}" item="item">
        <view class="tag-litem">
          <view><text class="iconfont icon-{{item.icon}} {{item.icon}} icon-border"></text></view>
          <view class="tag-name">{{item.name}}</view>
        </view>
      </repeat>
    </view>

    <button class="save" @tap="save" loading="{{btnLoading}}">保存</button>

    <toast />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Toast from 'wepy-com-toast'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '添加账单'
    }

    components = {
      toast: Toast
    }

    data = {
      userInfo: {
        nickName: '加载中...'
      },
      record: {
        type: '1',
        typeName: 'out',
        icon: 'shopping',
        name: '日用品',
        date: '2018-05-04',
        amount: '100',
        remark: 'yeyeye'
      },
      in: [
        {
          icon: 'eat',
          name: '餐饮'
        },
        {
          icon: 'present',
          name: '礼物'
        },
        {
          icon: 'water',
          name: '水费'
        },
        {
          icon: 'house',
          name: '房租'
        },
        {
          icon: 'screen',
          name: '旅游'
        },
        {
          icon: 'shop',
          name: '购物'
        },
        {
          icon: 'edit',
          name: '自定义'
        }
      ],
      out: [
        {
          icon: 'eat',
          name: '餐饮'
        },
        {
          icon: 'present',
          name: '礼物'
        },
        {
          icon: 'water',
          name: '水费'
        },
        {
          icon: 'house',
          name: '房租'
        },
        {
          icon: 'screen',
          name: '旅游'
        },
        {
          icon: 'shop',
          name: '购物'
        },
        {
          icon: 'edit',
          name: '自定义'
        }
      ],
      tags: this.out
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        })
      },
      addRecord () {
        wepy.navigateTo({
          url: 'pages/add'
        })
      },
      save () {
        console.log(this.record)
      },
      getDate (e) {
        this.record.date = e.detail.value
      },
      changeType (type) {
        this.record.type = type
      }
    }

    // 存放响应组件之间通过$broadcast、$emit、$invoke所传递的事件的函数
    events = {}

    onLoad() {
      let self = this
      this.$parent.getUserInfo(function (userInfo) {
        if (userInfo) {
          self.userInfo = userInfo
        }
        self.$apply()
      })
    }
  }
</script>

<style lang="less">
  .header {
    box-sizing: border-box;
    padding: 25rpx 0;
    height: 100rpx;
    text-align: center;
    button {
      line-height: 50rpx;
      color: #FF9900;
      border-radius: 0;
      border: 1rpx solid #FF9900;
    }
    .selected {
      color: #FFF;
      background-color: #FF9900;
    }
  }

  .add-mount {
    font-size: 30rpx;
    padding: 20rpx 40rpx;
    border-bottom: 1px solid #efefef;
    display: flex;
    .add-each {
      flex: 1;
    }
    &:first-child {
      border-top: 1px solid #efefef;
    }
  }

  .tags {
    padding: 40rpx;
    padding-bottom: 10rpx;
    margin-bottom: 80rpx;
    font-size: 24rpx;
    .tag-litem {
      display: inline-block;
      vertical-align: middle;
      width: 20%;
      text-align: center;
      margin-bottom: 30rpx;
    }
    .tag-name {
      margin-top: 20rpx;
    }
  }

  .save {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 80rpx;
    line-height: 80rpx;
    border: none;
    border-radius: 0;
    background-color: #48D1CC;
    color: #fff;
    font-size: 32rpx;
  }
</style>
