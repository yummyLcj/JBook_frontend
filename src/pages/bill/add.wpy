<template>
  <view class="container">
    <view class="header">
      <button size="mini" plain class="{{record.type === 'in' ? 'selected' : ''}}" @tap="changeType('in')">收入</button>
      <button size="mini" plain class="{{record.type === 'out' ? 'selected': ''}}" @tap="changeType('out')">支出</button>
    </view>

    <form class="add-form" @submit="submit">
      <view class="add-mount">
        <view class="add-each tal">
          <text class="iconfont icon-{{record.icon}} {{record.icon}} icon-border"></text>
          <text class="mr10">{{record.name}}</text>
        </view>
        <view class="add-each tar">
          <input class="fs42" type="digit" name="amount" placeholder="0" value="{{record.amount}}"/>
        </view>
      </view>
      <view class="add-mount">
        <picker class="add-each tal" mode="date" @change="getDate" value="{{record.date}}">
          <text class="iconfont icon-date fs42"></text>
          <text class="mr10">{{record.date}}</text>
        </picker>
        <view class="add-each tar">
          <input type="text" name="remark" placeholder="备注" value="{{record.remark}}"/>
        </view>
      </view>

      <view class="tags">
        <repeat for="{{tags}}" item="item">
          <view class="tag-item" @tap="changeIcon({{item}})">
            <view><text class="iconfont icon-{{item.icon}} {{item.icon}} icon-border"></text></view>
            <view class="tag-name">{{item.name}}</view>
          </view>
        </repeat>
      </view>

      <block wx:if="{{type === '1'}}">
        <view class="inners">
          <view class="inners-top">
            <view class="inners-left">参与人</view>
            <view class="inners-right"><text>已选{{sum}}/{{total}}人</text></view>
          </view>
          <checkbox-group @change="getInner">
            <label class="checkbox inners-check" wx:for="{{users}}" wx:key="item">
              <checkbox value="{{item.uid}}" checked="{{item.checked}}"/>
              <view class="inners-dib">
                <image src="{{item.avatar}}" class="avatar"/>
                <view class="inners-name">{{item.name}}</view>
              </view>
            </label>
          </checkbox-group>
        </view>
      </block>
      <button class="save" formType="submit" loading="{{btnLoading}}">保存</button>
    </form>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import ajax from 'com/ajax'

  export default class Add extends wepy.page {
    config = {
      navigationBarTitleText: '添加账单'
    }

    data = {
      type: '0',
      record: {
        aid: 0,
        type: 'in',
        icon: '',
        name: '',
        date: '',
        amount: '',
        remark: ''
      },
      rid: '',
      users: [],
      selectedUsers: [],
      in: [],
      out: [],
      tags: [],
      sum: 0,
      total: 0
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    gettingTypes() {
      return ajax({
        data: {
          method: '/types/{uid}'
        }
      }).then((res) => {
        let income = []
        let outcome = []
        res.data.data.forEach(({type}) => {
          let yinfo = {
            tid: type.tid,
            type: type.type === 0 ? 'in' : 'out',
            name: type.name,
            icon: type.code
          }
          if (type.type === 0) {
            income.push(yinfo)
          } else {
            outcome.push(yinfo)
          }
        })
        this.in = income.concat({icon: 'edit', name: '自定义'})
        this.tags = income || []
        this.out = outcome.concat({icon: 'edit', name: '自定义'})
        return [income, outcome]
      })
    }

    gettingUsers(aid) {
      return ajax({
        data: {
          method: '/session/account',
          aid
        }
      }).then((res) => {
        const users = res.data.users.map((account) => account.user) || []
        this.users = users
        this.total = this.users.length
        return users
      })
    }

    gettingDetail(rid) {
      return ajax({
        data: {
          method: `/record/${rid}`
        }
      }).then((res) => {
        const data = res.data.data[0]
        const selectedUsers = res.data.users.map((account) => account.user.uid)
        const record = this.record
        record.type = data.balanceType === 0 ? 'in' : 'out'
        console.log(data)
        record.icon = data.type.code
        record.name = data.type.name
        record.date = data.time
        record.amount = data.amount
        record.remark = data.note
        this.record = record
        const users = this.users
        users.forEach((user) => {
          if (selectedUsers.indexOf(user.uid) > -1) {
            user.checked = true
          }
        })
        this.selectedUsers = selectedUsers
        this.users = users
      })
    }

    onLoad(query) {
      this.type = query.type
      this.gettingTypes().then((res) => {
        this.record.aid = query.aid
        this.record.tid = res[0][0].tid
        this.record.icon = res[0][0].icon
        this.record.name = res[0][0].name
        const now = new Date()
        this.record.date = `${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`
        this.$apply()
      })
      this.gettingUsers(query.aid).then((users) => {
        const rid = query.rid || 0
        if (rid) {
          this.rid = rid
          this.gettingDetail(rid).then((res) => {
            this.$apply()
          })
        }
      })
    }

    save (e) {
      const record = this.record
      const detail = e.detail.value
      let data = {
        method: `/record/{uid}/${record.aid}`,
        amount: detail.amount,
        balanceType: record.type === 'in' ? 0 : 1,
        tid: record.tid,
        note: detail.remark,
        time: record.date
      }
      if (this.type === '1') {
        data.uids = this.selectedUsers.length ? this.selectedUsers : false
      }
      ajax({
        method: 'post',
        data
      })
        .then((res) => {
          wepy.showToast({
            title: '保存成功!'
          })
          setTimeout(() => {
            wepy.navigateBack()
          }, 1000)
        })
    }

    update (e) {
      const record = this.record
      const detail = e.detail.value
      let data = {
        method: `/record/${record.aid}/${this.rid}`,
        amount: detail.amount,
        balanceType: record.type === 'in' ? 0 : 1,
        tid: record.tid,
        note: detail.remark,
        time: record.date
      }
      if (this.type === '1') {
        data.uids = this.selectedUsers.length ? this.selectedUsers : false
      }
      ajax({
        method: 'put',
        data
      })
        .then((res) => {
          wepy.showToast({
            title: '保存成功!'
          })
          setTimeout(() => {
            wepy.navigateBack()
          }, 1000)
        })
    }

    methods = {
      addRecord () {
        wepy.navigateTo({
          url: 'pages/add'
        })
      },
      submit(e) {
        if (this.rid) {
          this.update(e)
        } else {
          this.save(e)
        }
      },
      getDate (e) {
        this.record.date = e.detail.value
      },
      changeType (type) {
        this.record.type = type
        this.tags = this[type]
      },
      changeIcon (item) {
        if (item.icon !== 'edit') {
          this.record.icon = item.icon
          this.record.name = item.name
          this.record.tid = item.tid
        } else {
          let url = this.record.type === 'in' ? 'in' : 'out'
          wepy.navigateTo({
            url: `../category/${url}`
          })
        }
      },
      getInner (e) {
        let val = e.detail.value
        this.selectedUsers = val
      }
    }

    // 存放响应组件之间通过$broadcast、$emit、$invoke所传递的事件的函数
    events = {}
  }
</script>

<style lang="less">
  .header {
    box-sizing: border-box;
    padding: 25rpx 0;
    height: 100rpx;
    text-align: center;
    button {
      line-height: 50rpx;
      color: #FF9900;
      border-radius: 0;
      border: 1rpx solid #FF9900;
    }
    .selected {
      color: #FFF;
      background-color: #FF9900;
    }
  }

  .add-mount {
    font-size: 30rpx;
    padding: 20rpx 40rpx;
    border-bottom: 1px solid #efefef;
    display: flex;
    .add-each {
      flex: 1;
    }
    &:first-child {
      border-top: 1px solid #efefef;
    }
  }

  .tags {
    padding: 40rpx;
    padding-bottom: 10rpx;
    margin-bottom: 30rpx;
    font-size: 24rpx;
    .tag-item {
      display: inline-block;
      vertical-align: middle;
      width: 20%;
      text-align: center;
      margin-bottom: 30rpx;
    }
    &:last-child {
      .icon-border {
        color: #ddd;
        border: 1 px dashed #ddd;
      }
    }
    .tag-name {
      margin-top: 20rpx;
    }
  }

  .inners {
    margin-bottom: 80rpx;
    .inners-top {
      display: flex;
      padding: 20rpx 30rpx;
      border-bottom: 1px solid #ddd;
      .inners-left {
        flex: 1;
        text-align: left;
      }
      .inners-right {
        flex: 1;
        text-align: right;
        text {
          border: 1px solid #FFCE40;
          font-size: 28rpx;
          padding:10rpx 20rpx;
          border-radius:50rpx;
        }
      }
    }
    .inners-check {
      display:inline-block;
      vertical-align:middle;
      width: 190rpx;
      margin-right:30rpx;
      margin-left: 30rpx;
    }
    .inners-dib {
      margin-top: 30rpx;
      margin-bottom: 30rpx;
      display:inline-block;
      vertical-align:middle;
      margin-left:10rpx;
      font-size:28rpx;
      text-align:center;
      .inners-name {
        max-width: 106rpx;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin-top: 10rpx;
      }
      .avatar {
        display: inline-block;
        width: 80rpx;
        height: 80rpx;
      }
    }
  }

  .save {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 80rpx;
    line-height: 80rpx;
    border: none;
    border-radius: 0;
    background-color: #48D1CC;
    color: #fff;
    font-size: 32rpx;
  }
</style>
